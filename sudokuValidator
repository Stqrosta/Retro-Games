
def which_square(x,y):
	return [x//3,y//3]

def check(board,y,x):
	n = len(board)
	coords = which_square(y,x)
	row_y = board[y]
	row_x = [board[i][x] for i in range(n)]
	square = [board[coords[0]*3+i][coords[1]*3:coords[1]*3+3] for i in range(3)]
	square = square[0]+square[1]+square[2]
	dct = {}
	for i in row_y:
		if i not in dct: 
			dct[i]=True
		else:
			return False
	dct = {}
	for i in row_x:
		if i not in dct: 
			dct[i]=True
		else:
			return False
	dct = {}
	for i in square:
		if i not in dct: 
			dct[i]=True
		else:
			return False
	return True

def valid_solution(board):
	for i in range(len(board)):
		for j in range(len(board)):
			if check(board,i,j) != True:
				return False
	return True
